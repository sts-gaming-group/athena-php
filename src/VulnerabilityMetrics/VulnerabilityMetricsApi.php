<?php

declare(strict_types=1);

namespace Athena\VulnerabilityMetrics;

use Athena\Utils\Http\HttpClientInterface;

class VulnerabilityMetricsApi implements VulnerabilityMetricsApiInterface
{
    const NVD_API_URL = 'https://services.nvd.nist.gov/rest/json/cves/2.0';

    public function __construct(private HttpClientInterface $httpClient)
    {
    }

    public function get(string $cveId): ?VulnerabilityMetrics
    {
        $response = $this->httpClient->get(sprintf("%s?cveId=%s", self::NVD_API_URL, $cveId));
        $json = json_decode($response, true);

        if (!$this->hasVulnerabilityMetrics($json)) {
            return null;
        }

        $cvssData = $json["vulnerabilities"][0]["cve"]["metrics"]["cvssMetricV31"][0]["cvssData"];
        if (!$cvssData["baseScore"] || !$cvssData["baseSeverity"]) {
            return null;
        }

        return new VulnerabilityMetrics(
            $cvssData["baseScore"],
            $cvssData["baseSeverity"]
        );
    }

    private function hasVulnerabilityMetrics(array $json): bool
    {
        return !empty($json['vulnerabilities'])
            && !empty($json['vulnerabilities'][0]['cve']['metrics'])
            && !empty($json['vulnerabilities'][0]['cve']['metrics']['cvssMetricV31'])
            && !empty($json['vulnerabilities'][0]['cve']['metrics']['cvssMetricV31'][0]['cvssData']);
    }
}
